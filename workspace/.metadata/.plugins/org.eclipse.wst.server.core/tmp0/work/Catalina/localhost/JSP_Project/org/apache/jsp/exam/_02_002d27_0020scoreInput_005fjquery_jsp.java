/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-02-28 00:20:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.exam;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class _02_002d27_0020scoreInput_005fjquery_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<title>scoreInput_jquery</title>\r\n");
      out.write("	</head>\r\n");
      out.write("	\r\n");
      out.write("	<body>\r\n");
      out.write("		<form action='02-28 scoreResult2.jsp' id=\"form\">\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				<legend>점수 입력</legend>\r\n");
      out.write("				\r\n");
      out.write("				<label for='name'>이름: </label>\r\n");
      out.write("				<input type='text' id='name' name='name'>\r\n");
      out.write("				<br>\r\n");
      out.write("				<label for='kor'>국어: </label>\r\n");
      out.write("				<input type='number' id='kor' name='kor'>\r\n");
      out.write("				<br>\r\n");
      out.write("				<label for='eng'>영어: </label>\r\n");
      out.write("				<input type='number' id='eng' name='eng'>\r\n");
      out.write("				<br>				\r\n");
      out.write("				<label for='math'>수학: </label>\r\n");
      out.write("				<input type='number' id='math' name='math'>\r\n");
      out.write("				<br><br>\r\n");
      out.write("				<button type=\"button\" id=\"button\">ㄱㄱ</button>\r\n");
      out.write("			</fieldset>\r\n");
      out.write("		</form>\r\n");
      out.write("	</body>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 아래 j쿼리 스크립트 안에다가 자바스크립트를 쓰고 그래서는 안됨 -->\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<!-- 이렇게 내가쓸 자바스크립트는 태그를 새로 열어줘야함 -->\r\n");
      out.write("	<script>\r\n");
      out.write("//		J쿼리를 의미하는게 $ 기호임\r\n");
      out.write("//		클릭 이벤트때 걍 바로 익명함수 사용해버리는 방법 \r\n");
      out.write("		$(\"#button\").click(\r\n");
      out.write("			function() {\r\n");
      out.write("				if($(\"#name\").val() == \"\") {\r\n");
      out.write("					alert(\"이름을 입력하십시오.\")\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				if($(\"#kor\").val() == \"\") {\r\n");
      out.write("					alert(\"국어 점수를 입력하십시오.\")\r\n");
      out.write("				} else if($(\"#kor\").val() < 0) {\r\n");
      out.write("					alert(\"올바른 국어 점수를 입력하십시오.\")\r\n");
      out.write("				} else if($(\"#kor\").val() > 100) {\r\n");
      out.write("					alert(\"올바른 국어 점수를 입력하십시오.\")\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				if($(\"#eng\").val() == \"\") {\r\n");
      out.write("					alert(\"영어 점수를 입력하십시오.\")\r\n");
      out.write("				} else if($(\"#eng\").val() < 0) {\r\n");
      out.write("					alert(\"올바른 영어 점수를 입력하십시오.\")\r\n");
      out.write("				} else if($(\"#eng\").val() > 100) {\r\n");
      out.write("					alert(\"올바른 영어 점수를 입력하십시오.\")\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				if($(\"#math\").val() == \"\") {\r\n");
      out.write("					alert(\"수학 점수를 입력하십시오.\")\r\n");
      out.write("				} else if($(\"#math\").val() < 0) {\r\n");
      out.write("					alert(\"올바른 수학 점수를 입력하십시오.\")\r\n");
      out.write("				} else if($(\"#math\").val() > 100) {\r\n");
      out.write("					alert(\"올바른 수학 점수를 입력하십시오.\")\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				$(\"#form\").submit()\r\n");
      out.write("			}		\r\n");
      out.write("		)\r\n");
      out.write("//		만일 script태그를 id 등등 위에 작성해서 스크립트가 그걸 못알아먹는다?\r\n");
      out.write("//		그럼 위 코드를\r\n");
      out.write("//		$(document).ready() 안에다가 작성해야함\r\n");
      out.write("//		$(document).ready(\r\n");
      out.write("//			function() {\r\n");
      out.write("//				$(\"#button\").click()...이런식으로\r\n");
      out.write("//			}\r\n");
      out.write("//		)\r\n");
      out.write("	</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
