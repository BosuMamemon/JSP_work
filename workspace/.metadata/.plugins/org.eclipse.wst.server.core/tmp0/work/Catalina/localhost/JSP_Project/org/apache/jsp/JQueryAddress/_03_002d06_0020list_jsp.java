/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-03-07 00:41:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.JQueryAddress;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.address.AddressDAO;
import com.address.Address;
import java.util.ArrayList;

public final class _03_002d06_0020list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("com.address.AddressDAO");
    _jspx_imports_classes.add("com.address.Address");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>list</title>\r\n");
      out.write("	</head>\r\n");
      out.write("	\r\n");
      out.write("	");

		request.setCharacterEncoding("utf-8");
	
		AddressDAO jdao = new AddressDAO();
		ArrayList<Address> arr = jdao.list();
		int count = jdao.getCount();
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<body>\r\n");
      out.write("		<table border=1 style=\"text-align:center;\">\r\n");
      out.write("			<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th colspan=\"3\">\r\n");
      out.write("						JQUERY ADDRESS LIST(<span id=\"spanCnt\">");
      out.print( count );
      out.write("</span>)\r\n");
      out.write("					</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>이름</th>\r\n");
      out.write("					<th>주소</th>\r\n");
      out.write("					<th>전화번호</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</thead>\r\n");
      out.write("			<tbody>\r\n");
      out.write("				");

					for(Address addr : arr) {
						
      out.write("<tr>\r\n");
      out.write("							<td>");
      out.print( addr.getName() );
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print( addr.getAddress() );
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print( addr.getTel() );
      out.write("</td>\r\n");
      out.write("						</tr>");

					}
				
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"3\"><a href=\"03-06 insert.jsp\" style=\"text-decoration:none; color:black; font-weight:bold;\">추가하기</a></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		<br>\r\n");
      out.write("		<select name=\"field\" id=\"field\">\r\n");
      out.write("			<option value=\"name\">이름</option>\r\n");
      out.write("			<option value=\"address\">주소</option>\r\n");
      out.write("		</select>\r\n");
      out.write("		<input type=\"text\" name=\"word\" id=\"word\">\r\n");
      out.write("		<button type=\"button\" id=\"btnSearch\">검색</button>\r\n");
      out.write("	</body>\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		$(document).ready(function() {\r\n");
      out.write("			$(\"#btnSearch\").click(function() {\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					type: \"get\",\r\n");
      out.write("					url: \"03-06 searchProcess.jsp\",\r\n");
      out.write("					data: {\"field\": $(\"#field\").val(), \"word\": $(\"#word\").val()},\r\n");
      out.write("					success: function(res) {\r\n");
      out.write("						let d = JSON.parse(res);\r\n");
      out.write("						let str = \"\";\r\n");
      out.write("						$.each(d.jArr, function(key, val) {\r\n");
      out.write("							str += \"<tr>\";\r\n");
      out.write("							str += \"<td>\" + val.name + \"</td>\";\r\n");
      out.write("							str += \"<td>\" + val.address + \"</td>\";\r\n");
      out.write("							str += \"<td>\" + val.tel + \"</td>\";\r\n");
      out.write("							str += \"</tr>\";\r\n");
      out.write("						})\r\n");
      out.write("						$(\"table tbody\").html(str);\r\n");
      out.write("						$(\"#spanCnt\").text(d.jCount);						\r\n");
      out.write("					},\r\n");
      out.write("					error: function(e) { alert(e + \"error\"); }\r\n");
      out.write("				})\r\n");
      out.write("			})\r\n");
      out.write("		})\r\n");
      out.write("	</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
